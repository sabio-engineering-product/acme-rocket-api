image:
  repository: europe-docker.pkg.dev/console-central-348315/acme-rocket-api/acme-rocket-api
  pullPolicy: IfNotPresent
  tag: latest

imagePullSecrets: []
nameOverride: acme-rocket-api
fullnameOverride: ""

serviceAccount:
  create: false
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

cloudsql:
  enabled: true
  image:
    repository: gcr.io/cloudsql-docker/gce-proxy
    tag: 1.16
    pullPolicy: IfNotPresent
  port: 5432
  resources:
    limits:
      cpu: 0.25
      memory: 32Mi
    requests:
      cpu: 10m
      memory: 16Mi

podAnnotations:
  cluster-autoscaler.kubernetes.io/safe-to-evict: 'true'

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}

service:
  type: ClusterIP
  port: 80

metrics:
  port: 8080
  serviceMonitor:
    enabled: true

ingress:
  enabled: true
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-issuer
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts: []
  tls: []

replicaCount: 1
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

podDisruptionBudget:
  enabled: true
  minAvailable: 2

resources:
  requests:
    cpu: 500m
    memory: 256Mi
  limits:
    cpu: 1
    memory: 512Mi

nodeSelector: {}

tolerations: []

prometheusExporter:
  image:
    repository: europe-docker.pkg.dev/console-central-348315/airline-extras/ruby-prometheus-exporter
    tag: latest
    pullPolicy: IfNotPresent
  appLabel: acme-rocket-api
  metricPrefix: cma_
  resources:
    requests:
      cpu: '0.1'
      memory: '100Mi'
    limits:
      cpu: '0.3'
      memory: '200Mi'

environment:
  PORT: "3000"
  REDIS_URL: "redis://knowledge-sidekiq-redis"
  RAILS_LOG_TO_STDOUT: "true"
  RAILS_MAX_THREADS: "20"
  DB_POOL: "100"
  DB_IDLE_CONNECTION_TIMEOUT: "60"
