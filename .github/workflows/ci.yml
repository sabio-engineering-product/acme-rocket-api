name: CI Pipeline
on:
  pull_request:
  pull_request_review_comment:
    types: [created]

concurrency:
    group:
      ${{ github.repository }}-${{ github.event.number || github.head_ref ||
      github.sha }}-${{ github.workflow }}-${{ github.event_name ==
      'pull_request_review_comment' && 'pr_comment' || 'pr' }}
    cancel-in-progress: ${{ github.event_name != 'pull_request_review_comment' }}
jobs:
  standards:
    uses: sabio-engineering-product/ci-pipeline/.github/workflows/standards.yml@main
    secrets: inherit


  security:
    needs: [standards]
    uses: sabio-engineering-product/ci-pipeline/.github/workflows/security.yml@main
    secrets: inherit
  
  review:
    needs: [security]
    uses: sabio-engineering-product/ci-pipeline/.github/workflows/review.yml@main
  
  test:
    needs: [review]
    uses: sabio-engineering-product/ci-pipeline/.github/workflows/test.yml@main

  build:
    needs: [test]
    uses: sabio-engineering-product/ci-pipeline/.github/workflows/build.yml@main
  
  deploy-staging:
    if: contains(github.event.pull_request.labels.*.name, 'staging')
    needs: [build]
    uses: sabio-engineering-product/ci-pipeline/.github/workflows/deploy-staging.yml@main

  deploy-qa:
    if: contains(github.event.pull_request.labels.*.name, 'quality-assurance')
    needs: [build]
    runs-on: ubuntu-latest
    environment: qa
    steps:
      - name: Jira
        run: echo "Checking Jira Ticket Status - QA"
      
      - name: Build Container
        run: echo "Build Container for QA"

      - name: Deploy Container
        run: echo "Deploying Container to QA"

  qa-testing:
    if: contains(github.event.pull_request.labels.*.name, 'quality-assurance')
    needs: [deploy-qa]
    runs-on: ubuntu-latest
    steps:      
      - name: Check QA Test Status on the ticket.
        run: echo "Access Execution Status on Tickets"

  
  

  
    

